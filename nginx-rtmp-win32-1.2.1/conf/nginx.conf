worker_processes  1;

error_log  logs/error.log debug;

events {
    worker_connections  1024;
}

# RTMP配置
rtmp {
    server {
        listen 1935;
        chunk_size 4096;
        
        # RTMP直播流配置
        application live {
            live on;
            record off;
            
            # 降低延迟的配置
            wait_key off;  # 不等待关键帧
            wait_video off;  # 不等待视频
            
            # 调试和错误处理
            publish_notify on;  # 推流通知
            play_restart on;    # 断流自动重连
            drop_idle_publisher 10s;  # 空闲推流者超时
            
            # 允许所有操作
            allow publish all;
            allow play all;
            
            # 生成HLS流
            hls on;
            hls_path temp/hls; # HLS文件会生成在这个目录下，请确保该目录可写
            hls_fragment 2s;
            hls_playlist_length 8s;
        }
    }
}

# HTTP配置
http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    server {
        listen       8080;
        server_name  localhost;

        # 静态文件服务 (根据您提供的代码，这个/live 路径似乎没有被前端使用，但保留其配置)
        location /live {
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';

            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }

            root html; # 请确保 'html' 目录存在且包含要服务的静态文件
        }

        # HLS配置
        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            # root temp; # Nginx会在这里寻找 /hls 目录下的文件，例如 temp/hls/test.m3u8
                         # 请确保 'temp' 目录与 Nginx 启动的工作目录相对
                         # 或者使用 'alias /path/to/your/nginx_install_dir/temp/hls/;' 来指定绝对路径
                         # 例如：alias G:/Web/SmartEye-Station-Guard/smart_station_platform/nginx-rtmp-win32-1.2.1/temp/hls/;

            # 【修复点】确保 root 或 alias 指向 RTMP HLS 文件的正确存放目录
            # 假设 Nginx 运行在安装目录下，hls_path temp/hls 意味着文件在安装目录下的 temp/hls
            root temp; # 保持与您的 rtmp 模块 hls_path temp/hls; 设置一致

            add_header Cache-Control no-cache; # HLS流通常不需要缓存

            # 【修复点】为 HLS 添加完整的 CORS 头部，允许跨域访问
            add_header Access-Control-Allow-Origin * always; # always 确保总是发送该头
            add_header Access-Control-Allow-Methods 'GET, OPTIONS' always; # HLS 通常是 GET 请求
            add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header Access-Control-Expose-Headers 'Content-Length,Content-Range'; # 暴露这些头给前端

            # 【修复点】处理 OPTIONS 预检请求
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, OPTIONS';
                add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header Access-Control-Max-Age 1728000; # 预检结果缓存时间
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204; # 对于 OPTIONS 请求，返回 204 No Content
            }
        }

        # RTMP统计页面
        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
        }

        location /stat.xsl {
            root html;
        }

        # RTMP控制页面
        location /control {
            rtmp_control all;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}